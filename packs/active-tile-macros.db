{"name":"Within Reach","type":"script","author":"NoP0yFyEU0MJHD4O","img":"icons/svg/dice-target.svg","scope":"global","command":"let {tile} = arguments[0];\n\nif(token == undefined)\n  return {continue: false};\n\nconst midTile = {x: tile.x + (tile.width / 2), y: tile.y + (tile.height / 2)};\nconst midToken = {x: token.x + (token.width / 2), y: token.y + (token.height / 2)};\nconst dist = Math.hypot(midTile.x - midToken.x, midTile.y - midToken.y);\n\nlet diag = Math.sqrt((canvas.grid.size ** 2) * 2);\nif(dist > diag + 10)\n  return {continue: false};","folder":null,"sort":0,"permission":{"default":0,"NoP0yFyEU0MJHD4O":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.f2fYfNpXM4jv6jdk"}},"_id":"bitY7QwYksn6YpKi"}
{"name":"Activate all Tiles","type":"script","author":"NoP0yFyEU0MJHD4O","img":"icons/svg/dice-target.svg","scope":"global","command":"/*\nSo if you forget to set the Tile to active while you're creating them\nor if you want to reset the scene you can use this macro to re-activate\nall the Active Tiles.\n*/\nfor(let tile of canvas.scene.tiles){\n  if(tile.data.flags['monks-active-tiles'] && !tile.data.flags['monks-active-tiles'].active){\n    await tile.setFlag('monks-active-tiles', 'active', true);\n  }\n}","folder":null,"sort":0,"permission":{"default":0,"NoP0yFyEU0MJHD4O":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.sxbiqFyIjwSEgMmp"}},"_id":"eEJTeKvdduCBlk4W"}
{"name":"Multiple Anchors based on DC","type":"script","author":"NoP0yFyEU0MJHD4O","img":"icons/svg/dice-target.svg","scope":"global","command":"let results = arguments[0].value.tokenresults;\n\nlet goto = [];\ngoto.push({ tokens: await Promise.all(results.filter(r => r.roll.total < 10).map(async (t) => { return await fromUuid(t.uuid); })), tag: 'anchor-below-10' });\ngoto.push({ tokens: await Promise.all(results.filter(r => r.roll.total >= 10 && r.roll.total < 15).map(async (t) => { return await fromUuid(t.uuid); })), tag: 'anchor-10-15' });\ngoto.push({ tokens: await Promise.all(results.filter(r => r.roll.total >= 15 && r.roll.total < 20).map(async (t) => { return await fromUuid(t.uuid); })), tag: 'anchor-15-20' });\ngoto.push({ tokens: await Promise.all(results.filter(r => r.roll.total >= 20).map(async (t) => { return await fromUuid(t.uuid); })), tag: 'anchor-above-20' });\n\nreturn {goto: goto};","folder":null,"sort":0,"permission":{"default":0,"NoP0yFyEU0MJHD4O":3},"flags":{"core":{"sourceId":"Macro.trh5rGVpgaOsw3kY"}},"_id":"5y88c08ErkyKtG4Y"}
